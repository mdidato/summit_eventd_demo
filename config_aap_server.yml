---
#- hosts: controller
#  gather_facts: false
#  become: true
#  tags: prep nodes
#
#  pre_tasks:
#
#    - name: add space to home volume
#      community.general.lvol:
#        vg: rootvg
#        lv: homelv
#        size: 10G
#        resizefs: true
#  
#  roles:
#    - redhat_cop.aap_utilities.aap_setup_download
#    - redhat_cop.aap_utilities.aap_setup_prepare
#    - redhat_cop.aap_utilities.aap_setup_install
#
- hosts: localhost
  gather_facts: false
  become: False
  environment:
    ANSIBLE_HOST_KEY_CHECKING: false
    CONTROLLER_HOST: "{{ controller_ip }}"
    CONTROLLER_PASSWORD: "{{ controller_password }}"
    CONTROLLER_USERNAME: "{{ controller_username }}"

  tasks:
    - name: copy required files to gateway servers
      ansible.builtin.copy:
        src: "{{ manifest }}"
        dest: "/tmp/manifest_AAP_demo.zip"

    - name: grab ssh keys from remote server
      ansible.builtin.fetch:
        src: /home/mdidato/.ssh/{{ item }}
        dest: /tmp/
        flat: true
      vars:
        ansible_ssh_user: "mdidato"
      delegate_to: ansible.scuderiadidato.com
      loop:
        - github_rsa
        - id_cloud_init

    - name: ingest ssh private key
      slurp:
        src: '/home/clouduser/.ssh/id_rsa_azure_vms'
      register: ssh_key

    - name: Set the license using a file
      ansible.controller.license:
        manifest: "/tmp/manifest_AAP_demo.zip"
        validate_certs: false

    - name: Create github creds
      ansible.controller.credential:
        name: summit_demo_github
        organization: Default
        state: present
        credential_type: Source Control
        inputs:
          ssh_key_data: "{{ lookup('file', '/tmp/github_rsa') }}"
        validate_certs: false 

    - name: Add Machine Credential
      ansible.controller.credential:
        name: summit_demo_cloudinit_cred
        credential_type: Machine
        organization: Default
        validate_certs: false
        inputs:
          ssh_key_data: "{{ ssh_key['content'] | b64decode }}"

    - name: add azure resource manager creds
      ansible.controller.credential:
        name: azure_rm_cred
        credential_type: "Microsoft Azure Resource Manager"
        organization: Default
        validate_certs: false
        inputs:
          client: "{{ lookup('env','ARM_CLIENT_ID') }}"
          secret: "{{ lookup('env','ARM_CLIENT_SECRET') }}"
          tenant: "{{ lookup('env','ARM_TENANT_ID') }}"
          subscription: "{{ lookup('env','ARM_SUBSCRIPTION_ID') }}"

    - name: Add project AAP
      ansible.controller.project:
        name: summit_demo
        scm_type: git
        scm_url: git@github.com:mdidato/summit_eventd_demo.git
        scm_branch: main
        scm_clean: true
        description: "Summit Demo Repo"
        organization: Default
        wait: true
        validate_certs: false
        credential: summit_demo_github

    - name: Add dynamic inventory
      ansible.controller.inventory:
        name: "summit_demo_dynamic_inv"
        description: "Summit demo Dynamic Inventory"
        organization: "Default"
        state: present
        validate_certs: false

    - name: Add dynamic inventory source
      ansible.controller.inventory_source:
        name: "summit-demo-dynaic-inv-source"
        inventory: "summit_demo_dynamic_inv"
        credential: azure_rm_cred
        overwrite: True
        update_on_launch: True
        organization: Default
        validate_certs: false
        source: azure_rm
        source_vars:
          plain_host_names: true
          conditional_groups:
            webservers: "'webserver' in name"
            controller: "'controller' in name"
            monitor: "'checkmk' in name"
          hostvar_expressions:
            ansible_user: "'azureuser'"

    - name: sync azure dynamic inventory
      ansible.controller.inventory_source_update:
        name: "summit-demo-dynaic-inv-source"
        inventory: "summit_demo_dynamic_inv"
        organization: Default
        validate_certs: false

    - name: Create Ping job template
      ansible.controller.job_template:
        name: "summit_demo_ping"
        job_type: "run"
        organization: "Default"
        inventory: "summit_demo_dynamic_inv"
        project: summit_demo
        playbook: "ping_test.yml"
        credentials:
          - "summit_demo_cloudinit_cred"
        state: "present"
        validate_certs: false

    - name: Launch the ping job template
      ansible.controller.job_launch:
        job_template: "azure_ping"
        validate_certs: false
      register: job